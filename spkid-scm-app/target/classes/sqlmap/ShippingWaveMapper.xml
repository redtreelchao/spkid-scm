<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fclub.tpd.mapper.ShippingWaveMapper">
	
	<resultMap id="BaseResultMap" type="com.fclub.tpd.dataobject.ShippingWave">
		<id column="wave_id" property="waveId" jdbcType="INTEGER" />
		<result column="wave_sn" property="waveSn" jdbcType="VARCHAR" />
		<result column="order_num" property="orderNum" jdbcType="INTEGER" />
		<result column="shipping_num" property="shippingNum" jdbcType="INTEGER" />
		<result column="provider_id" property="providerId" jdbcType="INTEGER" />
		<result column="wave_status" property="waveStatus" jdbcType="BIT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
		<result column="shortages" property="shortages" jdbcType="INTEGER" />
		<result column="is_print_box" property="isPrintBox" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="GoodsResultMap" type="com.fclub.tpd.dataobject.erp.GoodsEntity">
		<result column="product_sn" property="productSn" jdbcType="VARCHAR" />
		<result column="product_name" property="productName" jdbcType="VARCHAR" />
		<result column="market_price" property="marketPrice" jdbcType="DECIMAL" />
		<result column="shop_price" property="shopPrice" jdbcType="DECIMAL" />
		<result column="promote_price" property="promotePrice" jdbcType="DECIMAL" />
		<result column="consign_price" property="consignPrice" jdbcType="DECIMAL" />
		<result column="cost_price" property="costPrice" jdbcType="DECIMAL" />
		<result column="consign_rate" property="consignRate" jdbcType="DECIMAL" />
		<result column="product_cess" property="productCess" jdbcType="DECIMAL" />
		<result column="product_id" property="productId" jdbcType="INTEGER" />
		<result column="color_id" property="colorId" jdbcType="INTEGER" />
		<result column="size_id" property="sizeId" jdbcType="INTEGER" />
		<result column="product_num" property="productNum" jdbcType="INTEGER" />
		<result column="batch_id" property="batchId" jdbcType="INTEGER" />
	</resultMap>
	
	<sql id="Base_Column_List">
		t.wave_id,
		t.wave_sn,
		t.order_num,
		t.shipping_num,
		t.provider_id,
		t.wave_status,
		t.create_time,
		t.finish_time,
		t.shortages,
		t.is_print_box
	</sql>
	
	<select id="get" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select 
		<include refid="Base_Column_List" />
		from ty_scm_shipping_wave t
		where wave_id = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="getOrderListOfProvider" resultType="java.lang.Integer" >
		SELECT psp.order_id
        FROM ty_order_product og 
        LEFT JOIN ty_scm_shipping_packet psp ON og.op_id = psp.op_id 
        WHERE psp.`status` IN (1,2)
        AND psp.order_id in 
        <foreach collection="list" item="orderId"  open="(" separator="," close=")">  
        #{orderId}
		</foreach>
        GROUP BY psp.order_id HAVING COUNT(og.op_id) = COUNT(psp.op_id)
	</select>
	
	<select id="findPage" resultMap="BaseResultMap" parameterType="java.util.Map">
		select 
		<include refid="Base_Column_List" />
		from ty_scm_shipping_wave t
		where 1=1
		<if test="param.providerId != null ">
		and provider_id = #{param.providerId}
		</if>
		<if test="param.waveSn != null and param.waveSn != '' ">
		and wave_sn like '%${param.waveSn}%'
		</if>
		<if test="param.waveStatus != null and param.waveStatus >= 0 ">
		and wave_status = #{param.waveStatus}
		</if>
		<if test="param.createDateBegin != null and param.createDateBegin != '' ">
		<![CDATA[ and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{param.createDateBegin} ]]>
		</if>
		<if test="param.createDateEnd != null and param.createDateEnd != '' ">
		<![CDATA[ and DATE_FORMAT(create_time,'%Y-%m-%d') <= #{param.createDateEnd} ]]>
		</if>
		order by wave_id desc
	</select>
	
	<delete id="delete" parameterType="java.lang.Integer">
		delete from ty_scm_shipping_wave
		where wave_id = #{id,jdbcType=INTEGER}
	</delete>
	
	<insert id="insert" parameterType="com.fclub.tpd.dataobject.ShippingWave" useGeneratedKeys="true" keyProperty="waveId">
		insert into ty_scm_shipping_wave (
			wave_sn,
			order_num,
			shipping_num,
			provider_id,
			wave_status,
			create_time,
			finish_time,
			shortages,
			is_print_box
		)
		values (
			#{waveSn,jdbcType=VARCHAR},
			#{orderNum,jdbcType=INTEGER},
			#{shippingNum,jdbcType=INTEGER},
			#{providerId,jdbcType=INTEGER},
			#{waveStatus,jdbcType=BIT},
			#{createTime,jdbcType=TIMESTAMP},
			#{finishTime,jdbcType=TIMESTAMP},
			#{shortages,jdbcType=INTEGER},
			#{isPrintBox,jdbcType=INTEGER}
		)
	</insert>
	
	<update id="update" parameterType="com.fclub.tpd.dataobject.ShippingWave">
		update ty_scm_shipping_wave
		<set>
		<if test="waveSn != null">
		wave_sn = #{waveSn,jdbcType=VARCHAR},
		</if>
		<if test="orderNum != null">
		order_num = #{orderNum,jdbcType=INTEGER},
		</if>
		<if test="shippingNum != null">
		shipping_num = #{shippingNum,jdbcType=INTEGER},
		</if>
		<if test="providerId != null">
		provider_id = #{providerId,jdbcType=INTEGER},
		</if>
		<if test="waveStatus != null and waveStatus >= 0">
		wave_status = #{waveStatus,jdbcType=BIT},
		</if>
		<if test="createTime != null">
		create_time = #{createTime,jdbcType=TIMESTAMP},
		</if>
		<if test="finishTime != null">
		finish_time = #{finishTime,jdbcType=TIMESTAMP},
		</if>
		<if test="shortages != null">
		shortages = #{shortages,jdbcType=INTEGER},
		</if>
		<!-- <if test="isPrintBox != null">
		is_print_box = #{isPrintBox,jdbcType=INTEGER},
		</if> -->
		</set>
		where wave_id = #{waveId,jdbcType=INTEGER}
	</update>
	
	<update id="updateByWaveSn" parameterType="com.fclub.tpd.dataobject.ShippingWave">
		update ty_scm_shipping_wave
		<set>
		<!-- <if test="orderNum != null">
		order_num = #{orderNum,jdbcType=INTEGER},
		</if> -->
		<if test="shippingNum != null">
		shipping_num = #{shippingNum,jdbcType=INTEGER},
		</if>
		<if test="shortages != null">
		shortages = #{shortages,jdbcType=INTEGER},
		</if>
		<if test="waveStatus != null">
		wave_status = #{waveStatus,jdbcType=BIT},
		</if>
		<if test="finishTime != null">
		finish_time = #{finishTime,jdbcType=TIMESTAMP},
		</if>
		<!-- <if test="isPrintBox != null">
		is_print_box = #{isPrintBox,jdbcType=INTEGER},
		</if> -->
		</set>
		where wave_sn = #{waveSn,jdbcType=VARCHAR}
	</update>
	
	<update id="updatePrintStatus" parameterType="java.lang.String">
		update ty_scm_shipping_wave
		set is_print_box = 1
		where wave_sn = #{waveSn}
	</update>
	
	<update id="updateWaveShortage" >
		UPDATE ty_scm_shipping_wave sw,
		(SELECT wave_sn,COUNT(DISTINCT order_id) AS num
		FROM ty_scm_shipping_packet 
		WHERE wave_sn IN
		<foreach collection="list" item="waveSn" open="(" separator="," close=")">
		#{waveSn}
		</foreach>
		AND `status`=2
		GROUP BY wave_sn
		) sp
		SET sw.shortages=IFNULL(sp.num,0)
		WHERE sw.wave_sn=sp.wave_sn
	</update>
	
	<update id="updateWaveShipping" >
		UPDATE ty_scm_shipping_wave sw,
		(SELECT wave_sn,COUNT(DISTINCT order_id) AS num
		FROM ty_scm_shipping_packet 
		WHERE wave_sn IN
		<foreach collection="list" item="waveSn" open="(" separator="," close=")">
		#{waveSn}
		</foreach>
		AND `status`=1
		GROUP BY wave_sn
		) sp
		SET sw.shipping_num=IFNULL(sp.num,0)
		WHERE sw.wave_sn=sp.wave_sn
	</update>
	
	<update id="updateWaveStatusFinish" >
		UPDATE ty_scm_shipping_wave 
		SET wave_status=2,finish_time=NOW() 
		WHERE wave_sn IN
		<foreach collection="list" item="waveSn" open="(" separator="," close=")">
		#{waveSn}
		</foreach>
		AND order_num=shipping_num
	</update>
	
	<update id="updateWaveStatusHalfFinish" >
		UPDATE ty_scm_shipping_wave 
		SET wave_status=1 
		WHERE wave_sn IN
		<foreach collection="list" item="waveSn" open="(" separator="," close=")">
		#{waveSn}
		</foreach>
		AND shipping_num>0 
		AND order_num>shipping_num
	</update>
	
	<!-- erp -->
	<update id="updateOrderShortage">
		update ty_order_info oi,
		( SELECT psp.order_id,COUNT(og.op_id) og_num,COUNT(psp.op_id) sp_num
        FROM ty_order_product og 
        LEFT JOIN ty_scm_shipping_packet psp ON og.op_id = psp.op_id 
        WHERE psp.`status` IN (1,2)
        AND psp.order_id in 
        <foreach collection="list" item="orderId"  open="(" separator="," close=")">  
        #{orderId}
		</foreach>
        GROUP BY psp.order_id HAVING og_num=sp_num 
        ) sp
        <!-- 取货处理暂时标示为异常单 -->
		SET oi.odd = 1 
		WHERE oi.order_id=sp.order_id
	</update>
	
	<update id="updateOrderShipping">
		update ty_order_info oi,
		( SELECT og.order_id,COUNT(og.op_id) og_num,COUNT(psp.op_id) sp_num
        FROM ty_order_product og 
        LEFT JOIN ty_scm_shipping_packet psp ON og.op_id = psp.op_id AND psp.`status` = 1
        WHERE og.order_id in 
        <foreach collection="orderIds" item="orderId"  open="(" separator="," close=")">  
        #{orderId}
		</foreach>
        GROUP BY og.order_id HAVING og_num=sp_num 
        ) sp
		SET oi.shipping_status = 1, 
			oi.shipping_admin = #{providerId,jdbcType=INTEGER}, 
			oi.shipping_date = #{date,jdbcType=TIMESTAMP}, 
            oi.is_ok = 1, 
            oi.is_ok_date = #{date,jdbcType=TIMESTAMP}, 
            oi.is_ok_admin = 1
<!--             , oi.depot_status = 0  -->
		WHERE oi.order_id=sp.order_id
	</update>
	
	<select id="getShippingGoodsList" resultMap="GoodsResultMap" >
		SELECT 
			g.product_sn,g.product_name,g.market_price,g.shop_price,g.promote_price,
			c.consign_price,c.cost_price,c.consign_rate,c.product_cess, c.batch_id, 
			og.product_id,og.color_id,og.size_id,SUM(og.consign_num) as product_num
		FROM ty_scm_shipping_packet sp
		LEFT JOIN ty_order_product og ON sp.op_id = og.op_id 
		LEFT JOIN ty_product_info g ON og.product_id = g.product_id 
		LEFT JOIN ty_product_cost c ON c.product_id = g.product_id 
		WHERE sp.order_id in
		<foreach collection="orderIds" item="orderId"  open="(" separator="," close=")">  
        #{orderId}
		</foreach>
		AND sp.provider_id = #{providerId,jdbcType=INTEGER}
		GROUP BY og.product_id, og.color_id, og.size_id
	</select>
	
	<update id="subtractWaitNum">
		UPDATE ty_product_sub 
		SET wait_num = wait_num - #{productNumber}
        WHERE product_id = #{productId} 
        AND color_id = #{colorId} 
        AND size_id = #{sizeId}
	</update>
	
	<insert id="insertOrderOut" >
		INSERT INTO ty_transaction_info (
			trans_type, 
			trans_status, 
			trans_sn, 
			product_id, 
			color_id, 
			size_id, 
			product_number, 
			depot_id, 
			location_id, 
			create_date, 
			create_admin, 
			update_date, 
			update_admin, 
			trans_direction, 
			sub_id, 
			finance_check_date, 
			finance_check_admin,
			batch_id,
			shop_price,
			consign_price,
			cost_price,
			consign_rate,
			product_cess
		) 
        SELECT 
        	3, 2, oi.order_sn, og.product_id, 
        	og.color_id, og.size_id, -1*og.consign_num,
        	#{depotId,jdbcType=INTEGER}, 
        	#{locationId,jdbcType=INTEGER}, 
        	#{date,jdbcType=TIMESTAMP}, #{providerId}, 
        	#{date,jdbcType=TIMESTAMP}, #{providerId}, 
        	1, og.op_id, 
        	oi.finance_date, oi.finance_admin,
        	c.batch_id, og.shop_price, c.consign_price, c.cost_price, c.consign_rate, c.product_cess
        FROM ty_scm_shipping_packet sp 
        INNER JOIN ty_order_product og ON sp.op_id = og.op_id 
        INNER JOIN ty_order_info oi ON sp.order_id = oi.order_id 
        INNER JOIN ty_product_cost c ON c.product_id = og.product_id 
        WHERE sp.order_id in
		<foreach collection="orderIds" item="orderId"  open="(" separator="," close=")">  
        #{orderId}
		</foreach>
		AND sp.provider_id = #{providerId}
	</insert>
	
	<select id="countOrderNum" parameterType="Integer" resultType="Integer">
		SELECT COUNT(DISTINCT order_id) 
		FROM ty_scm_shipping_packet p
		INNER JOIN ty_scm_shipping_wave w ON p.wave_sn = w.wave_sn 
		WHERE w.wave_id = #{waveId,jdbcType=INTEGER}
	</select>
	
	<update id="updateOrderGoodsConsign">
		UPDATE ty_order_product og, (
	        SELECT psp.op_id FROM ty_scm_shipping_packet psp 
	        WHERE psp.provider_id = #{providerId}
	        AND psp.order_id in 
	        <foreach collection="orderIds" item="orderId"  open="(" separator="," close=")">  
	        #{orderId}
			</foreach>
        ) sp 
        SET og.consign_num = 0, consign_mark = 1 WHERE og.op_id = sp.op_id
	</update>
	
</mapper>